{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sai\\\\Desktop\\\\Apka Halwai\\\\frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // ADD THIS IMPORT\n\nimport { authService } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const navigate = useNavigate(); // ADD THIS LINE\n\n  useEffect(() => {\n    if (token) {\n      // Verify token and get user info\n      const userData = localStorage.getItem('user');\n      if (userData) {\n        setUser(JSON.parse(userData));\n      }\n    }\n  }, [token]);\n  const login = async (email, password) => {\n    try {\n      const response = await authService.login({\n        email,\n        password\n      });\n      setToken(response.token);\n      setUser(response.user);\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('user', JSON.stringify(response.user));\n      navigate('/'); // ADD THIS LINE TO REDIRECT AFTER LOGIN\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      const response = await authService.register({\n        username,\n        email,\n        password\n      });\n      setToken(response.token);\n      setUser(response.user);\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('user', JSON.stringify(response.user));\n      navigate('/'); // ADD THIS LINE TO REDIRECT AFTER REGISTRATION\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    navigate('/login'); // OPTIONAL: Redirect to login after logout\n  };\n  const isAdmin = (user === null || user === void 0 ? void 0 : user.role) === 'admin';\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      register,\n      logout,\n      isAdmin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"+7qD7bUmAHfui0Eix5AVsIOIxzU=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","authService","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","navigate","userData","JSON","parse","login","email","password","response","setItem","stringify","error","register","username","logout","removeItem","isAdmin","role","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Sai/Desktop/Apka Halwai/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // ADD THIS IMPORT\r\nimport { User, AuthContextType } from '../types';\r\nimport { authService } from '../services/authService';\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | null>(localStorage.getItem('token'));\r\n  const navigate = useNavigate(); // ADD THIS LINE\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      // Verify token and get user info\r\n      const userData = localStorage.getItem('user');\r\n      if (userData) {\r\n        setUser(JSON.parse(userData));\r\n      }\r\n    }\r\n  }, [token]);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      const response = await authService.login({ email, password });\r\n      setToken(response.token);\r\n      setUser(response.user);\r\n      localStorage.setItem('token', response.token);\r\n      localStorage.setItem('user', JSON.stringify(response.user));\r\n      navigate('/'); // ADD THIS LINE TO REDIRECT AFTER LOGIN\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (username: string, email: string, password: string) => {\r\n    try {\r\n      const response = await authService.register({ username, email, password });\r\n      setToken(response.token);\r\n      setUser(response.user);\r\n      localStorage.setItem('token', response.token);\r\n      localStorage.setItem('user', JSON.stringify(response.user));\r\n      navigate('/'); // ADD THIS LINE TO REDIRECT AFTER REGISTRATION\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken(null);\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    navigate('/login'); // OPTIONAL: Redirect to login after logout\r\n  };\r\n\r\n  const isAdmin = user?.role === 'admin';\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, login, register, logout, isAdmin }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}