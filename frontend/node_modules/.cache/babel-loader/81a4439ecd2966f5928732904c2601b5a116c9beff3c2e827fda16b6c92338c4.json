{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sai\\\\Desktop\\\\Apka Halwai\\\\frontend\\\\src\\\\pages\\\\DashboardPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { sweetService } from '../services/sweetService';\nimport { useAuth } from '../context/AuthContext';\nimport SweetCard from '../components/Sweet/SweetCard';\nimport SweetForm from '../components/Sweet/SweetForm';\nimport SearchBar from '../pages/SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = () => {\n  _s();\n  const [sweets, setSweets] = useState([]);\n  const [filteredSweets, setFilteredSweets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showForm, setShowForm] = useState(false);\n  const [editingSweet, setEditingSweet] = useState();\n  const {\n    isAdmin\n  } = useAuth();\n  useEffect(() => {\n    loadSweets();\n  }, []);\n  const loadSweets = async () => {\n    try {\n      const data = await sweetService.getAll();\n      setSweets(data);\n      setFilteredSweets(data);\n    } catch (error) {\n      console.error('Failed to load sweets:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSearch = results => {\n    setFilteredSweets(results);\n  };\n  const handleAddSweet = () => {\n    setEditingSweet(undefined);\n    setShowForm(true);\n  };\n  const handleEditSweet = sweet => {\n    setEditingSweet(sweet);\n    setShowForm(true);\n  };\n  const handleFormClose = () => {\n    setShowForm(false);\n    setEditingSweet(undefined);\n  };\n  const handleFormSave = () => {\n    setShowForm(false);\n    setEditingSweet(undefined);\n    loadSweets();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '1200px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '20px',\n        flexWrap: 'wrap',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: '#ff6b6b',\n          margin: 0\n        },\n        children: \"Sweet Shop Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddSweet,\n        style: {\n          backgroundColor: '#ff6b6b',\n          color: 'white',\n          border: 'none',\n          padding: '10px 20px',\n          borderRadius: '5px',\n          cursor: 'pointer',\n          fontSize: '16px'\n        },\n        children: \"+ Add New Sweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '30px',\n        backgroundColor: '#f8f9fa',\n        padding: '20px',\n        borderRadius: '10px',\n        boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n      },\n      children: /*#__PURE__*/_jsxDEV(SweetForm, {\n        sweet: editingSweet,\n        onSave: handleFormSave,\n        onCancel: handleFormClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))',\n        gap: '20px'\n      },\n      children: filteredSweets.map(sweet => /*#__PURE__*/_jsxDEV(SweetCard, {\n        sweet: sweet,\n        onUpdate: loadSweets,\n        onEdit: isAdmin ? () => handleEditSweet(sweet) : undefined\n      }, sweet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), filteredSweets.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        padding: '40px',\n        color: '#666',\n        fontSize: '18px'\n      },\n      children: [\"No sweets found. \", isAdmin && 'Try adding some sweets!']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"3+Awi9PUvmN1J9iqmu76RLvPLpw=\", false, function () {\n  return [useAuth];\n});\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","sweetService","useAuth","SweetCard","SweetForm","SearchBar","jsxDEV","_jsxDEV","DashboardPage","_s","sweets","setSweets","filteredSweets","setFilteredSweets","loading","setLoading","showForm","setShowForm","editingSweet","setEditingSweet","isAdmin","loadSweets","data","getAll","error","console","handleSearch","results","handleAddSweet","undefined","handleEditSweet","sweet","handleFormClose","handleFormSave","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","maxWidth","margin","display","justifyContent","alignItems","marginBottom","flexWrap","gap","color","onClick","backgroundColor","border","borderRadius","cursor","fontSize","onSearch","boxShadow","onSave","onCancel","gridTemplateColumns","map","onUpdate","onEdit","id","length","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/Sai/Desktop/Apka Halwai/frontend/src/pages/DashboardPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Sweet } from '../types';\r\nimport { sweetService } from '../services/sweetService';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport SweetCard from '../components/Sweet/SweetCard';\r\nimport SweetForm from '../components/Sweet/SweetForm';\r\nimport SearchBar from '../pages/SearchBar';\r\n\r\nconst DashboardPage: React.FC = () => {\r\n  const [sweets, setSweets] = useState<Sweet[]>([]);\r\n  const [filteredSweets, setFilteredSweets] = useState<Sweet[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editingSweet, setEditingSweet] = useState<Sweet | undefined>();\r\n  const { isAdmin } = useAuth();\r\n\r\n  useEffect(() => {\r\n    loadSweets();\r\n  }, []);\r\n\r\n  const loadSweets = async () => {\r\n    try {\r\n      const data = await sweetService.getAll();\r\n      setSweets(data);\r\n      setFilteredSweets(data);\r\n    } catch (error) {\r\n      console.error('Failed to load sweets:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (results: Sweet[]) => {\r\n    setFilteredSweets(results);\r\n  };\r\n\r\n  const handleAddSweet = () => {\r\n    setEditingSweet(undefined);\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleEditSweet = (sweet: Sweet) => {\r\n    setEditingSweet(sweet);\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleFormClose = () => {\r\n    setShowForm(false);\r\n    setEditingSweet(undefined);\r\n  };\r\n\r\n  const handleFormSave = () => {\r\n    setShowForm(false);\r\n    setEditingSweet(undefined);\r\n    loadSweets();\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: '20px', maxWidth: '1200px', margin: '0 auto' }}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '20px', flexWrap: 'wrap', gap: '10px' }}>\r\n        <h1 style={{ color: '#ff6b6b', margin: 0 }}>Sweet Shop Dashboard</h1>\r\n        {isAdmin && (\r\n          <button \r\n            onClick={handleAddSweet}\r\n            style={{\r\n              backgroundColor: '#ff6b6b',\r\n              color: 'white',\r\n              border: 'none',\r\n              padding: '10px 20px',\r\n              borderRadius: '5px',\r\n              cursor: 'pointer',\r\n              fontSize: '16px'\r\n            }}\r\n          >\r\n            + Add New Sweet\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <SearchBar onSearch={handleSearch} />\r\n\r\n      {showForm && (\r\n        <div style={{ \r\n          marginBottom: '30px', \r\n          backgroundColor: '#f8f9fa', \r\n          padding: '20px', \r\n          borderRadius: '10px',\r\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\r\n        }}>\r\n          <SweetForm \r\n            sweet={editingSweet} \r\n            onSave={handleFormSave} \r\n            onCancel={handleFormClose} \r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <div style={{ \r\n        display: 'grid', \r\n        gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))', \r\n        gap: '20px' \r\n      }}>\r\n        {filteredSweets.map(sweet => (\r\n          <SweetCard \r\n            key={sweet.id} \r\n            sweet={sweet} \r\n            onUpdate={loadSweets}\r\n            onEdit={isAdmin ? () => handleEditSweet(sweet) : undefined}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {filteredSweets.length === 0 && !loading && (\r\n        <div style={{ \r\n          textAlign: 'center', \r\n          padding: '40px', \r\n          color: '#666',\r\n          fontSize: '18px'\r\n        }}>\r\n          No sweets found. {isAdmin && 'Try adding some sweets!'}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}