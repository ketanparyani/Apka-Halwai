{"ast":null,"code":"import api from './api';\nexport const sweetService = {\n  getAll: async () => {\n    const response = await api.get('/sweets');\n    return response.data;\n  },\n  getById: async id => {\n    const response = await api.get(`/sweets/${id}`);\n    return response.data;\n  },\n  create: async sweet => {\n    const response = await api.post('/sweets', sweet);\n    return response.data;\n  },\n  update: async (id, sweet) => {\n    const response = await api.put(`/sweets/${id}`, sweet);\n    return response.data;\n  },\n  delete: async id => {\n    await api.delete(`/sweets/${id}`);\n  },\n  search: async (query, category, minPrice, maxPrice) => {\n    const params = new URLSearchParams();\n    params.append('q', query);\n    if (category) params.append('category', category);\n    if (minPrice) params.append('minPrice', minPrice.toString());\n    if (maxPrice) params.append('maxPrice', maxPrice.toString());\n    const response = await api.get(`/sweets/search?${params.toString()}`);\n    return response.data;\n  },\n  purchase: async (id, quantity) => {\n    const response = await api.post(`/sweets/${id}/purchase`, {\n      quantity\n    });\n    return response.data;\n  },\n  restock: async (id, quantity) => {\n    const response = await api.post(`/sweets/${id}/restock`, {\n      quantity\n    });\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","sweetService","getAll","response","get","data","getById","id","create","sweet","post","update","put","delete","search","query","category","minPrice","maxPrice","params","URLSearchParams","append","toString","purchase","quantity","restock"],"sources":["C:/Users/Sai/Desktop/Apka Halwai/frontend/src/services/sweetService.ts"],"sourcesContent":["import api from './api';\r\nimport { Sweet } from '../types';\r\n\r\nexport const sweetService = {\r\n  getAll: async (): Promise<Sweet[]> => {\r\n    const response = await api.get('/sweets');\r\n    return response.data;\r\n  },\r\n\r\n  getById: async (id: number): Promise<Sweet> => {\r\n    const response = await api.get(`/sweets/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  create: async (sweet: Omit<Sweet, 'id' | 'created_at' | 'updated_at'>): Promise<Sweet> => {\r\n    const response = await api.post('/sweets', sweet);\r\n    return response.data;\r\n  },\r\n\r\n  update: async (id: number, sweet: Partial<Sweet>): Promise<Sweet> => {\r\n    const response = await api.put(`/sweets/${id}`, sweet);\r\n    return response.data;\r\n  },\r\n\r\n  delete: async (id: number): Promise<void> => {\r\n    await api.delete(`/sweets/${id}`);\r\n  },\r\n\r\n  search: async (query: string, category?: string, minPrice?: number, maxPrice?: number): Promise<Sweet[]> => {\r\n    const params = new URLSearchParams();\r\n    params.append('q', query);\r\n    if (category) params.append('category', category);\r\n    if (minPrice) params.append('minPrice', minPrice.toString());\r\n    if (maxPrice) params.append('maxPrice', maxPrice.toString());\r\n    \r\n    const response = await api.get(`/sweets/search?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n\r\n  purchase: async (id: number, quantity: number): Promise<Sweet> => {\r\n    const response = await api.post(`/sweets/${id}/purchase`, { quantity });\r\n    return response.data;\r\n  },\r\n\r\n  restock: async (id: number, quantity: number): Promise<Sweet> => {\r\n    const response = await api.post(`/sweets/${id}/restock`, { quantity });\r\n    return response.data;\r\n  },\r\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAGvB,OAAO,MAAMC,YAAY,GAAG;EAC1BC,MAAM,EAAE,MAAAA,CAAA,KAA8B;IACpC,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,SAAS,CAAC;IACzC,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDC,OAAO,EAAE,MAAOC,EAAU,IAAqB;IAC7C,MAAMJ,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,WAAWG,EAAE,EAAE,CAAC;IAC/C,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDG,MAAM,EAAE,MAAOC,KAAsD,IAAqB;IACxF,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACU,IAAI,CAAC,SAAS,EAAED,KAAK,CAAC;IACjD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDM,MAAM,EAAE,MAAAA,CAAOJ,EAAU,EAAEE,KAAqB,KAAqB;IACnE,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACY,GAAG,CAAC,WAAWL,EAAE,EAAE,EAAEE,KAAK,CAAC;IACtD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDQ,MAAM,EAAE,MAAON,EAAU,IAAoB;IAC3C,MAAMP,GAAG,CAACa,MAAM,CAAC,WAAWN,EAAE,EAAE,CAAC;EACnC,CAAC;EAEDO,MAAM,EAAE,MAAAA,CAAOC,KAAa,EAAEC,QAAiB,EAAEC,QAAiB,EAAEC,QAAiB,KAAuB;IAC1G,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpCD,MAAM,CAACE,MAAM,CAAC,GAAG,EAAEN,KAAK,CAAC;IACzB,IAAIC,QAAQ,EAAEG,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEL,QAAQ,CAAC;IACjD,IAAIC,QAAQ,EAAEE,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEJ,QAAQ,CAACK,QAAQ,CAAC,CAAC,CAAC;IAC5D,IAAIJ,QAAQ,EAAEC,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEH,QAAQ,CAACI,QAAQ,CAAC,CAAC,CAAC;IAE5D,MAAMnB,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,kBAAkBe,MAAM,CAACG,QAAQ,CAAC,CAAC,EAAE,CAAC;IACrE,OAAOnB,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDkB,QAAQ,EAAE,MAAAA,CAAOhB,EAAU,EAAEiB,QAAgB,KAAqB;IAChE,MAAMrB,QAAQ,GAAG,MAAMH,GAAG,CAACU,IAAI,CAAC,WAAWH,EAAE,WAAW,EAAE;MAAEiB;IAAS,CAAC,CAAC;IACvE,OAAOrB,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDoB,OAAO,EAAE,MAAAA,CAAOlB,EAAU,EAAEiB,QAAgB,KAAqB;IAC/D,MAAMrB,QAAQ,GAAG,MAAMH,GAAG,CAACU,IAAI,CAAC,WAAWH,EAAE,UAAU,EAAE;MAAEiB;IAAS,CAAC,CAAC;IACtE,OAAOrB,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}